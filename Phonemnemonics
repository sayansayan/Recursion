/*
17. Letter Combinations of a Phone Number

Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.

A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.



 

Example 1:

Input: digits = "23"
Output: ["ad","ae","af","bd","be","bf","cd","ce","cf"]
Example 2:

Input: digits = ""
Output: []
Example 3:

Input: digits = "2"
Output: ["a","b","c"]
*/

class Solution {
public:
    void letterCombinationshelper(string digits,vector<string>& dic,string result,vector<string>& mnemonics)  {
        if(digits.size() == 0 ) {
            mnemonics.emplace_back(result);
            return;
        }
        int x = digits[0] - '0';
        
        for(int i =0 ;i < dic[x].size() ; i++ ) {
            result.push_back(dic[x][i]);
          
            letterCombinationshelper(digits.substr(1),dic,result,mnemonics);
            result.pop_back();
        }
         return;   
    }
        
    vector<string> letterCombinations(string digits) {
        vector<string> mnemonics {};
        if(digits.size() == 0)
            return mnemonics;
        string result;
        vector<string> dic = 
                  {"0","1","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        
        letterCombinationshelper(digits,dic,result,mnemonics);
        return mnemonics;
        
    }
};

